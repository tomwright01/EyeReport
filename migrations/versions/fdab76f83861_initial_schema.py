"""initial schema

Revision ID: fdab76f83861
Revises: 
Create Date: 2018-01-10 15:51:09.690563

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fdab76f83861'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diagnoses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagnoses_name'), 'diagnoses', ['name'], unique=True)
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lname', sa.Unicode(length=64), nullable=False),
    sa.Column('fname', sa.Unicode(length=64), nullable=True),
    sa.Column('phone', sa.Unicode(length=10), nullable=True),
    sa.Column('fax', sa.Unicode(length=10), nullable=True),
    sa.Column('email', sa.Unicode(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lname', 'fname', name='uc_doctor')
    )
    op.create_index(op.f('ix_doctors_lname'), 'doctors', ['lname'], unique=False)
    op.create_table('test_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fullname', sa.Unicode(length=128), nullable=True),
    sa.Column('abbrv_name', sa.Unicode(length=12), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timeseries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('interval', sa.Float(), nullable=False),
    sa.Column('x_units', sa.Unicode(), nullable=False),
    sa.Column('y_units', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timeseriesdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('timeseries_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['timeseries_id'], ['timeseries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_diagnoses',
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('diagnosis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['diagnosis_id'], ['diagnoses.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], )
    )
    op.create_table('patients_phi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('lname', sa.Unicode(length=64), nullable=False),
    sa.Column('fname', sa.Unicode(length=64), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', name='gender_types'), nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lname', 'fname', 'dob', name='_unique_patient')
    )
    op.create_index(op.f('ix_patients_phi_lname'), 'patients_phi', ['lname'], unique=False)
    op.create_table('visits',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('visit_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.UnicodeText(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('patient_id', 'visit_date', name='pk_visit'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_visits_visit_date'), 'visits', ['visit_date'], unique=False)
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_type_id', sa.Integer(), nullable=True),
    sa.Column('visit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_type_id'], ['test_types.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['visits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('visit_tests',
    sa.Column('visit_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['visits.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visit_tests')
    op.drop_table('tests')
    op.drop_index(op.f('ix_visits_visit_date'), table_name='visits')
    op.drop_table('visits')
    op.drop_index(op.f('ix_patients_phi_lname'), table_name='patients_phi')
    op.drop_table('patients_phi')
    op.drop_table('patient_diagnoses')
    op.drop_table('timeseriesdata')
    op.drop_table('patients')
    op.drop_table('timeseries')
    op.drop_table('test_types')
    op.drop_index(op.f('ix_doctors_lname'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_diagnoses_name'), table_name='diagnoses')
    op.drop_table('diagnoses')
    # ### end Alembic commands ###
